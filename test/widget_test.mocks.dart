// Mocks generated by Mockito 5.4.4 from annotations
// in capstone/test/widget_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:convert' as _i7;
import 'dart:typed_data' as _i9;

import 'package:capstone/controllers/collector_controller.dart' as _i10;
import 'package:capstone/models/collector_model.dart' as _i4;
import 'package:capstone/services/api_service.dart' as _i3;
import 'package:capstone/services/waste_collector_service.dart' as _i5;
import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponse_0 extends _i1.SmartFake implements _i2.Response {
  _FakeResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamedResponse_1 extends _i1.SmartFake
    implements _i2.StreamedResponse {
  _FakeStreamedResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeApiService_2 extends _i1.SmartFake implements _i3.ApiService {
  _FakeApiService_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWasteCollector_3 extends _i1.SmartFake
    implements _i4.WasteCollector {
  _FakeWasteCollector_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWasteCollectorService_4 extends _i1.SmartFake
    implements _i5.WasteCollectorService {
  _FakeWasteCollectorService_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockClient extends _i1.Mock implements _i2.Client {
  MockClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.Response> head(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i6.Future<_i2.Response>);

  @override
  _i6.Future<_i2.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i6.Future<_i2.Response>);

  @override
  _i6.Future<_i2.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i7.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i6.Future<_i2.Response>);

  @override
  _i6.Future<_i2.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i7.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i6.Future<_i2.Response>);

  @override
  _i6.Future<_i2.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i7.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i6.Future<_i2.Response>);

  @override
  _i6.Future<_i2.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i7.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i6.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i6.Future<_i2.Response>);

  @override
  _i6.Future<String> read(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<String>.value(_i8.dummyValue<String>(
          this,
          Invocation.method(
            #read,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i6.Future<String>);

  @override
  _i6.Future<_i9.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBytes,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<_i9.Uint8List>.value(_i9.Uint8List(0)),
      ) as _i6.Future<_i9.Uint8List>);

  @override
  _i6.Future<_i2.StreamedResponse> send(_i2.BaseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [request],
        ),
        returnValue:
            _i6.Future<_i2.StreamedResponse>.value(_FakeStreamedResponse_1(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
      ) as _i6.Future<_i2.StreamedResponse>);

  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [WasteCollectorService].
///
/// See the documentation for Mockito's code generation for more information.
class MockWasteCollectorService extends _i1.Mock
    implements _i5.WasteCollectorService {
  MockWasteCollectorService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.ApiService get apiService => (super.noSuchMethod(
        Invocation.getter(#apiService),
        returnValue: _FakeApiService_2(
          this,
          Invocation.getter(#apiService),
        ),
      ) as _i3.ApiService);

  @override
  set apiService(_i3.ApiService? _apiService) => super.noSuchMethod(
        Invocation.setter(
          #apiService,
          _apiService,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<_i4.WasteCollector> createAccount(
    String? collectorId,
    String? name,
    String? email,
    String? phoneNumber,
    String? vehicleNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createAccount,
          [
            collectorId,
            name,
            email,
            phoneNumber,
            vehicleNumber,
          ],
        ),
        returnValue: _i6.Future<_i4.WasteCollector>.value(_FakeWasteCollector_3(
          this,
          Invocation.method(
            #createAccount,
            [
              collectorId,
              name,
              email,
              phoneNumber,
              vehicleNumber,
            ],
          ),
        )),
      ) as _i6.Future<_i4.WasteCollector>);

  @override
  _i6.Future<_i4.WasteCollector> viewAccountDetails(String? collectorId) =>
      (super.noSuchMethod(
        Invocation.method(
          #viewAccountDetails,
          [collectorId],
        ),
        returnValue: _i6.Future<_i4.WasteCollector>.value(_FakeWasteCollector_3(
          this,
          Invocation.method(
            #viewAccountDetails,
            [collectorId],
          ),
        )),
      ) as _i6.Future<_i4.WasteCollector>);

  @override
  _i6.Future<_i4.WasteCollector> editAccountDetails(
    String? collectorId,
    String? name,
    String? email,
    String? phoneNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #editAccountDetails,
          [
            collectorId,
            name,
            email,
            phoneNumber,
          ],
        ),
        returnValue: _i6.Future<_i4.WasteCollector>.value(_FakeWasteCollector_3(
          this,
          Invocation.method(
            #editAccountDetails,
            [
              collectorId,
              name,
              email,
              phoneNumber,
            ],
          ),
        )),
      ) as _i6.Future<_i4.WasteCollector>);

  @override
  _i6.Future<_i4.WasteCollector> deleteAccount(String? collectorId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAccount,
          [collectorId],
        ),
        returnValue: _i6.Future<_i4.WasteCollector>.value(_FakeWasteCollector_3(
          this,
          Invocation.method(
            #deleteAccount,
            [collectorId],
          ),
        )),
      ) as _i6.Future<_i4.WasteCollector>);

  @override
  _i6.Future<_i4.WasteCollector> viewCollectorHistory(String? collectorId) =>
      (super.noSuchMethod(
        Invocation.method(
          #viewCollectorHistory,
          [collectorId],
        ),
        returnValue: _i6.Future<_i4.WasteCollector>.value(_FakeWasteCollector_3(
          this,
          Invocation.method(
            #viewCollectorHistory,
            [collectorId],
          ),
        )),
      ) as _i6.Future<_i4.WasteCollector>);
}

/// A class which mocks [CollectorController].
///
/// See the documentation for Mockito's code generation for more information.
class MockCollectorController extends _i1.Mock
    implements _i10.CollectorController {
  MockCollectorController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.WasteCollectorService get apiService => (super.noSuchMethod(
        Invocation.getter(#apiService),
        returnValue: _FakeWasteCollectorService_4(
          this,
          Invocation.getter(#apiService),
        ),
      ) as _i5.WasteCollectorService);

  @override
  _i6.Future<_i4.WasteCollector> viewAccount(String? collectorId) =>
      (super.noSuchMethod(
        Invocation.method(
          #viewAccount,
          [collectorId],
        ),
        returnValue: _i6.Future<_i4.WasteCollector>.value(_FakeWasteCollector_3(
          this,
          Invocation.method(
            #viewAccount,
            [collectorId],
          ),
        )),
      ) as _i6.Future<_i4.WasteCollector>);

  @override
  _i6.Future<_i4.WasteCollector> createAccount(
    String? collectorId,
    String? name,
    String? email,
    String? phoneNumber,
    String? vehicleNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createAccount,
          [
            collectorId,
            name,
            email,
            phoneNumber,
            vehicleNumber,
          ],
        ),
        returnValue: _i6.Future<_i4.WasteCollector>.value(_FakeWasteCollector_3(
          this,
          Invocation.method(
            #createAccount,
            [
              collectorId,
              name,
              email,
              phoneNumber,
              vehicleNumber,
            ],
          ),
        )),
      ) as _i6.Future<_i4.WasteCollector>);

  @override
  _i6.Future<_i4.WasteCollector> editAccount(
    String? collectorId,
    String? name,
    String? email,
    String? phoneNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #editAccount,
          [
            collectorId,
            name,
            email,
            phoneNumber,
          ],
        ),
        returnValue: _i6.Future<_i4.WasteCollector>.value(_FakeWasteCollector_3(
          this,
          Invocation.method(
            #editAccount,
            [
              collectorId,
              name,
              email,
              phoneNumber,
            ],
          ),
        )),
      ) as _i6.Future<_i4.WasteCollector>);

  @override
  _i6.Future<_i4.WasteCollector> deleteAccount(String? collectorId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAccount,
          [collectorId],
        ),
        returnValue: _i6.Future<_i4.WasteCollector>.value(_FakeWasteCollector_3(
          this,
          Invocation.method(
            #deleteAccount,
            [collectorId],
          ),
        )),
      ) as _i6.Future<_i4.WasteCollector>);

  @override
  _i6.Future<_i4.WasteCollector> viewCollectorHistory(String? collectorId) =>
      (super.noSuchMethod(
        Invocation.method(
          #viewCollectorHistory,
          [collectorId],
        ),
        returnValue: _i6.Future<_i4.WasteCollector>.value(_FakeWasteCollector_3(
          this,
          Invocation.method(
            #viewCollectorHistory,
            [collectorId],
          ),
        )),
      ) as _i6.Future<_i4.WasteCollector>);
}
